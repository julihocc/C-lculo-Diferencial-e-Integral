(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    214005,       4001]
NotebookOptionsPosition[    213465,       3983]
NotebookOutlinePosition[    213912,       4000]
CellTagsIndexPosition[    213869,       3997]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["y' = (xy)/(2x-1)", "WolframAlphaLong",
 CellChangeTimes->{{3.8601376793232007`*^9, 3.8601376916792593`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"3fc3cc1d-54e9-477a-8ed0-c474f1b0440d"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "y' = (xy)/(2x-1)", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"y'[x] == (x y[x])/(2 x - 1)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 SuperscriptBox["y", "\[Prime]", MultilineFunction -> None], 
                 "(", "x", ")"}], "\[LongEqual]", 
               TagBox[
                FractionBox[
                 TagBox[
                  RowBox[{"x", " ", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                  PolynomialForm[#, TraditionalOrder -> False]& ], 
                 RowBox[{
                   RowBox[{"2", " ", "x"}], "-", "1"}]], Identity]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Separable equation", "scanner" -> "ODE", "id" -> 
     "SeparableEquation", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              RowBox[{
                FractionBox[
                 RowBox[{
                   SuperscriptBox["y", "\[Prime]", MultilineFunction -> None],
                    "(", "x", ")"}], 
                 RowBox[{"y", "(", "x", ")"}]], "\[LongEqual]", 
                TagBox[
                 FractionBox["x", 
                  RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "x"}]}]], Identity]}], HoldForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "ODE classification", "scanner" -> "ODE", "id" -> 
     "ODEClassification", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"first\[Hyphen]order linear ordinary differential equation\"", 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Differential equation solution", "scanner" -> "ODE", 
     "id" -> "Solution", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{y'[x] == (x y[x])/(-1 + 2 x)}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                SubscriptBox["c", "1"], " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                   RowBox[{"1", "/", "4"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{"log", "(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "-", "1"}], ")"}], "-", "1"}], 
                    ")"}]}]]}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Solution__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Solution__Step-by-step solution", "stepbystep" -> "true"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Slope field", "scanner" -> "ODE", "id" -> "SlopeField",
      "position" -> "500", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "VectorPlot[{1, (x y)/(-1 + 2 x)}, {x, -1/2, 3/2}, {y, -1, 1}, \
VectorStyle -> \"Segment\"]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{}}, {{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                 
                 LineBox[{{-0.5459352518198113, -0.9899881511999378}, \
{-0.4554502461801888, -1.0126549787600623`}}], 
                 
                 LineBox[{{-0.5462177754356634, -0.8801081219016396}, \
{-0.45516772256433674`, -0.9003864154534048}}], 
                 
                 LineBox[{{-0.5464715660888384, -0.77024939488295}, \
{-0.4549139319111617, -0.788096549867139}}], 
                 
                 LineBox[{{-0.5466950542263258, -0.6604098372021846}, \
{-0.4546904437736743, -0.6757875149429488}}], 
                 
                 LineBox[{{-0.546886818174942, -0.5505871208525517}, \
{-0.4544986798250581, -0.5634616386876261}}], 
                 
                 LineBox[{{-0.5470456080560928, -0.4407787406403818}, \
{-0.4543398899439073, -0.4511214262948404}}], 
                 
                 LineBox[{{-0.5471703676236314, -0.3309820362245862}, \
{-0.45421513037636874`, -0.33876953810568045`}}], 
                 
                 LineBox[{{-0.5472602533059906, -0.22119421795360095`}, \
{-0.45412524469400956`, -0.22640876377171018`}}], 
                 
                 LineBox[{{-0.5473146497976914, -0.11141239597447643`}, \
{-0.4540708482023087, -0.11404199314587911`}}], 
                 
                 LineBox[{{-0.5473331816453862, -0.0016336119431458206`}, \
{-0.45405231635461385`, -0.0016721845722541518`}}], 
                 
                 LineBox[{{-0.5473157204056489, 
                  0.1081451274548236}, {-0.4540697775943512, 
                  0.11069766863473199`}}], 
                 
                 LineBox[{{-0.5472623871089601, 
                  0.21792681604900352`}, {-0.45412311089103996`, 
                  0.22306457264550766`}}], 
                 LineBox[{{-0.5471735499377158, 
                  0.32771441371506155`}, {-0.45421194806228427`, 
                  0.33542556758440517`}}], 
                 
                 LineBox[{{-0.5470498172051302, 
                  0.4375108128132246}, {-0.45433568079486986`, 
                  0.4477777610911977}}], 
                 
                 LineBox[{{-0.5468920258956077, 
                  0.5473188064121965}, {-0.45449347210439234`, 
                  0.5601183600971813}}], 
                 
                 LineBox[{{-0.5467012261850163, 
                  0.6571410590922987}, {-0.45468427181498383`, 
                  0.6724447000220348}}], 
                 
                 LineBox[{{-0.5464786624922074, 
                  0.766980081002784}, {-0.45490683550779265`, 
                  0.7847542707165048}}], 
                 
                 LineBox[{{-0.5462257517142117, 
                  0.8768382057032821}, {-0.45515974628578837`, 
                  0.8970447386209623}}], 
                 
                 LineBox[{{-0.545944059362569, 
                  0.9867175721580563}, {-0.45544143863743114`, 
                  1.0093139647711438`}}], 
                 
                 LineBox[{{-0.43523897042139426`, -0.9913311792562786}, \
{-0.3441231644950459, -1.0113119507037214`}}], 
                 
                 LineBox[{{-0.4354595712531895, -0.8813220841077387}, \
{-0.3439025636632506, -0.8991724532473057}}], 
                 
                 LineBox[{{-0.43565695003175214`, -0.7713276839230164}, \
{-0.343705184884688, -0.7870182608270724}}], 
                 
                 LineBox[{{-0.4358301457816291, -0.6613464246546623}, \
{-0.343531989134811, -0.674850927490471}}], 
                 
                 LineBox[{{-0.4359782967477246, -0.5513766466473415}, \
{-0.34338383816871554`, -0.5626721128928361}}], 
                 
                 LineBox[{{-0.43610065186964464`, -0.4414165955850461}, \
{-0.3432614830467955, -0.45048357135017614`}}], 
                 
                 LineBox[{{-0.4361965810754844, -0.33146443519958846`}, \
{-0.3431655538409557, -0.33828713913067826`}}], 
                 
                 LineBox[{{-0.4362655841266158, -0.22151826155251328`}, \
{-0.3430965507898243, -0.22608472017279782`}}], 
                 
                 LineBox[{{-0.43630729777505756`, -0.11157611864958007`}, \
{-0.3430548371413826, -0.11387827047077548`}}], 
                 
                 LineBox[{{-0.4363215010354258, -0.0016360151005601895`}, \
{-0.3430406338810143, -0.0016697814148397831`}}], 
                 
                 LineBox[{{-0.43630811842279416`, 
                  0.10830405850025832`}, {-0.343054016493646, 
                  0.11053873758929728`}}], 
                 
                 LineBox[{{-0.4362672210639898, 
                  0.21824611182368303`}, {-0.34309491385245033`, 
                  0.22274527687082812`}}], 
                 
                 LineBox[{{-0.4361990256503845, 
                  0.3281921370497713}, {-0.34316310926605564`, 
                  0.3349478442496955}}], 
                 
                 LineBox[{{-0.43610389126228216`, 
                  0.4381440914711523}, {-0.343258243654158, 
                  0.44714448243327004`}}], 
                 
                 LineBox[{{-0.43598231415562466`, 
                  0.5481038808069347}, {-0.34337982076081547`, 
                  0.559333285702443}}], 
                 
                 LineBox[{{-0.43583492065810114`, 
                  0.6580733435527566}, {-0.343527214258339, 
                  0.6715124155615768}}], 
                 
                 LineBox[{{-0.43566245837131534`, 
                  0.7680542366554873}, {-0.3436996765451248, 
                  0.7836801150638016}}], 
                 
                 LineBox[{{-0.4354657859163695, 
                  0.8780482227549188}, {-0.3438963490000706, 
                  0.8958347215693259}}], 
                 
                 LineBox[{{-0.43524586149057337`, 
                  0.9880568591819548}, {-0.34411627342586676`, 
                  1.0079746777472454`}}], 
                 
                 LineBox[{{-0.32457870716105863`, -0.9930957183871473}, \
{-0.2327600646718215, -1.0095474115728527`}}], 
                 
                 LineBox[{{-0.32472906460084267`, -0.8829099443150366}, \
{-0.2326097072320375, -0.897584593040008}}], 
                 
                 LineBox[{{-0.3248629983888523, -0.7727324369889653}, \
{-0.23247577344402787`, -0.7856135077611237}}], 
                 
                 LineBox[{{-0.3249800601196756, -0.6625622707268111}, \
{-0.23235871171320457`, -0.6736350814183223}}], 
                 
                 LineBox[{{-0.3250798521140736, -0.5523984791411244}, \
{-0.23225891971880658`, -0.5616502803990534}}], 
                 
                 LineBox[{{-0.3251620310804821, -0.44224005988800713`}, \
{-0.23217674075239808`, -0.4496601070472151}}], 
                 
                 LineBox[{{-0.32522631133701346`, -0.3320859798789747}, \
{-0.2321124604958667, -0.33766559445129196`}}], 
                 
                 LineBox[{{-0.32527246753582184`, -0.2219351808969808}, \
{-0.23206630429705832`, -0.2256678008283303}}], 
                 
                 LineBox[{{-0.32530033683959486`, -0.11178658554838419`}, \
{-0.23203843499328533`, -0.11366780357197136`}}], 
                 
                 LineBox[{{-0.32530982050934126`, -0.0016391034746434951`}, \
{-0.2320289513235389, -0.0016666930407564773`}}], 
                 
                 LineBox[{{-0.3253008848733059, 
                  0.10850836225875618`}, {-0.23203788695957425`, 
                  0.11033443383079941`}}], 
                 
                 LineBox[{{-0.32527356165844407`, 
                  0.21865690868298066`}, {-0.2320652101744361, 
                  0.22233448001153047`}}], 
                 
                 LineBox[{{-0.32522794767807756`, 
                  0.328807626445193}, {-0.23211082415480264`, 
                  0.33433235485427365`}}], 
                 
                 LineBox[{{-0.3251642038817427, 
                  0.43896159341566654`}, {-0.23217456795113744`, 
                  0.44632698048875574`}}], 
                 
                 LineBox[{{-0.3250825537854416, 
                  0.5491198684695974}, {-0.23225621804743857`, 
                  0.5583172980397805}}], 
                 
                 LineBox[{{-0.32498328131213183`, 
                  0.6592834855262724}, {-0.2323554905207483, 
                  0.670302273588061}}], 
                 
                 LineBox[{{-0.324866728082985, 
                  0.7694534479220166}, {-0.2324720437498952, 
                  0.7822809037972723}}], 
                 
                 LineBox[{{-0.32473329020939123`, 
                  0.8796307231854051}, {-0.23260548162348893`, 
                  0.8942522211388395}}], 
                 
                 LineBox[{{-0.32458341464363566`, 
                  0.9898162382738517}, {-0.2327553571892445, 
                  1.0062152986553485`}}], 
                 
                 LineBox[{{-0.21393385072210708`, -0.995503609278862}, \
{-0.12138155802721312`, -1.0071395206811382`}}], 
                 
                 LineBox[{{-0.21400948088383082`, -0.885066231739358}, \
{-0.12130592786548937`, -0.8954283056156865}}], 
                 
                 LineBox[{{-0.21407653788700282`, -0.7746318024085991}, \
{-0.1212388708623174, -0.7837141423414897}}], 
                 
                 LineBox[{{-0.21413490778769628`, -0.6641999721579315}, \
{-0.12118050096162392`, -0.671997379987202}}], 
                 
                 LineBox[{{-0.21418449068346843`, -0.5537703845203659}, \
{-0.12113091806585177`, -0.5602783750198119}}], 
                 
                 LineBox[{{-0.21422520118266886`, -0.4433426766434216}, \
{-0.12109020756665136`, -0.4485574902918006}}], 
                 
                 LineBox[{{-0.2142569688093705, -0.3329164802839463}, \
{-0.12105843993994968`, -0.33683509404632034`}}], 
                 
                 LineBox[{{-0.21427973834019437`, -0.22249142283873335`}, \
{-0.12103567040912583`, -0.22511155888657775`}}], 
                 
                 LineBox[{{-0.21429347006989277`, -0.1120671284043316}, \
{-0.12102193867942743`, -0.11338726071602395`}}], 
                 
                 LineBox[{{-0.21429814000320002`, -0.0016432188590938652`}, \
{-0.12101726874612018`, -0.001662577656306107}}], 
                 
                 LineBox[{{-0.2142937399711378, 
                  0.1087806850397591}, {-0.1210216687781824, 
                  0.1100621110497965}}], 
                 
                 LineBox[{{-0.21428027767067273`, 
                  0.21920496255146474`}, {-0.12103513107864747`, 
                  0.22178642614304644`}}], 
                 
                 LineBox[{{-0.21425777662734943`, 
                  0.3296299918469328}, {-0.12105763212197077`, 
                  0.3335099894525339}}], 
                 
                 LineBox[{{-0.2142262760812539, 
                  0.44005614891134753`}, {-0.12108913266806628`, 
                  0.4452324249930748}}], 
                 
                 LineBox[{{-0.21418583079738868`, 
                  0.5504838064615666}, {-0.12112957795193152`, 
                  0.5569533600478112}}], 
                 
                 LineBox[{{-0.21413651080225102`, 
                  0.660913332885548}, {-0.12117889794706918`, 
                  0.6686724262287855}}], 
                 
                 LineBox[{{-0.2140784010490866, 
                  0.7713450912107659}, {-0.1212370077002336, 
                  0.7803892605085231}}], 
                 
                 LineBox[{{-0.21401160101493444`, 
                  0.8817794381082343}, {-0.12130380773438576`, 
                  0.8921035062160102}}], 
                 
                 LineBox[{{-0.2139362242331752, 
                  0.9922167229383295}, {-0.121379184516145, 
                  1.0038148139908707`}}], 
                 
                 LineBox[{{-0.10322604292032393`, -0.9989483692518597}, \
{-0.010066002745436273`, -1.0036947607081403`}}], 
                 
                 LineBox[{{-0.10323868378895684`, -0.8881367534933035}, \
{-0.01005336187680337, -0.892357783861741}}], 
                 
                 LineBox[{{-0.10324984864923187`, -0.7773253391349559}, \
{-0.010042197016528344`, -0.781020605615133}}], 
                 
                 LineBox[{{-0.103259534307275, -0.6665141012598204}, \
{-0.0100325113584852, -0.6696832508853129}}], 
                 
                 LineBox[{{-0.10326773798905048`, -0.5557030148667986}, \
{-0.01002430767670972, -0.5583457446733792}}], 
                 
                 LineBox[{{-0.10327445734256349`, -0.44489205488250466`}, \
{-0.01001758832319672, -0.4470081120527176}}], 
                 
                 LineBox[{{-0.10327969043973051`, -0.33408119617315907`}, \
{-0.010012355226029702`, -0.3356703781571076}}], 
                 
                 LineBox[{{-0.10328343577791464`, -0.22327041355655047`}, \
{-0.010008609887845563`, -0.2243325681687606}}], 
                 
                 LineBox[{{-0.10328569228112336`, -0.112459681814051}, \
{-0.010006353384636853`, -0.11299470730630454`}}], 
                 
                 LineBox[{{-0.10328645930086673`, -0.0016489757026722789`}, \
{-0.010005586364893473`, -0.0016568208127276936`}}], 
                 
                 LineBox[{{-0.10328573661667509`, 
                  0.1091617300328511}, {-0.010006309049085116`, 
                  0.10968106605670448`}}], 
                 
                 LineBox[{{-0.10328352443627499`, 
                  0.2199724606479646}, {-0.010008521229485215`, 
                  0.22101892804654655`}}], 
                 
                 LineBox[{{-0.10327982339542335`, 
                  0.3307832413861965}, {-0.010012222270336851`, 
                  0.3323567399132702}}], 
                 
                 LineBox[{{-0.10327463455740007`, 
                  0.441594097467074}, {-0.010017411108360123`, 
                  0.4436944764373483}}], 
                 
                 LineBox[{{-0.10326795941215988`, 
                  0.552405054074066}, {-0.010024086253600316`, 
                  0.5550321124353119}}], 
                 
                 LineBox[{{-0.10325979987514461`, 
                  0.6632161363425664}, {-0.010032245790615589`, 
                  0.6663696227717671}}], 
                 
                 LineBox[{{-0.10325015828575798`, 
                  0.7740273693479305}, {-0.010041887380002217`, 
                  0.7777069823713584}}], 
                 
                 LineBox[{{-0.10323903740550514`, 
                  0.8848387780935791}, {-0.010053008260255077`, 
                  0.8890441662306653}}], 
                 
                 LineBox[{{-0.10322644041579976`, 
                  0.9956503874991818}, {-0.01006560524996044, 
                  1.0003811494300183`}}], 
                 
                 LineBox[{{0.007811977912893481, -1.0041650019239603`}, {
                  0.10091933950490631`, -0.9984781280360397}}], 
                 
                 LineBox[{{0.007793838284951123, -0.8927762747491248}, {
                  0.10093747913284865`, -0.8877182626059198}}], 
                 
                 LineBox[{{0.007777811373745301, -0.7813872013575718}, {
                  0.10095350604405451`, -0.7769587433925171}}], 
                 
                 LineBox[{{0.007763903754298113, -0.6699978244243242}, {
                  0.10096741366350168`, -0.666199527720809}}], 
                 
                 LineBox[{{0.007752121141987062, -0.5586081868318047}, {
                  0.10097919627581273`, -0.555440572708373}}], 
                 
                 LineBox[{{0.0077424683860390295`, -0.447218331640891}, {
                  0.10098884903176078`, -0.44468183529433125`}}], 
                 
                 LineBox[{{0.007734949463998005, -0.33582830206168657`}, {
                  0.10099636795380176`, -0.3339232722685801}}], 
                 
                 LineBox[{{0.0077295674771788656`, -0.2244381414240534}, {
                  0.10100174994062094`, -0.22316484030125772`}}], 
                 
                 LineBox[{{0.007726324647117512, -0.11304789314795233`}, {
                  0.10100499277068226`, -0.1124064959724032}}], 
                 
                 LineBox[{{0.007725222313025103, -0.0016576007136396699`}, {
                  0.1010060951047747, -0.0016481958017603025`}}], 
                 LineBox[{{0.0077262609302522905`, 0.1097326923682333}, {
                  0.1010050564875475, 0.1091101037213223}}], 
                 
                 LineBox[{{0.007729440069766932, 0.22112294258656948`}, {
                  0.10100187734803286`, 0.21986844610794168`}}], 
                 
                 LineBox[{{0.007734758418646202, 0.3325131064597759}, {
                  0.10099655899915361`, 0.33062687483969083`}}], 
                 
                 LineBox[{{0.0077422137815821995`, 0.4439031405656662}, {
                  0.10098910363621759`, 0.441385433338756}}], 
                 
                 LineBox[{{0.007751803083397783, 0.555293001571268}, {
                  0.10097951433440203`, 0.5521441649381098}}], 
                 
                 LineBox[{{0.007763522372566584, 0.666682646262487}, {
                  0.1009677950452332, 0.6629031128518464}}], 
                 
                 LineBox[{{0.007777366825729749, 0.7780720315735807}, {
                  0.10095395059207002`, 0.7736623201457082}}], 
                 
                 LineBox[{{0.007793330753199039, 0.8894611146163961}, {
                  0.10093798666460077`, 0.8844218297078484}}], 
                 
                 LineBox[{{0.007811407605434063, 1.0008498527093226`}, {
                  0.1009199098123657, 0.9951816842198775}}], 
                 
                 LineBox[{{0.12010229626279628`, -1.0125242754201542`}, {
                  0.21065238423856353`, -0.9901188545398458}}], 
                 
                 LineBox[{{0.11982611241508119`, -0.9002680456923107}, {
                  0.21092856808627858`, -0.8802264916627338}}], 
                 
                 LineBox[{{0.11957811849454453`, -0.7879912270687506}, {
                  0.21117656200681528`, -0.7703547176813385}}], 
                 
                 LineBox[{{0.11935981507281654`, -0.6756958930508717}, {
                  0.21139486542854327`, -0.6605014590942617}}], 
                 
                 LineBox[{{0.11917255993138681`, -0.5633843015429254}, {
                  0.211582120569973, -0.5506644579972524}}], 
                 
                 LineBox[{{0.11901754570195938`, -0.45105887771979614`}, {
                  0.21173713479940043`, -0.44084128921542615`}}], 
                 
                 LineBox[{{0.1188957794863307, -0.33872219304866263`}, {
                  0.2118589010150291, -0.33102938128160403`}}], 
                 LineBox[{{0.11880806511259204`, -0.2263769408085496}, {
                  0.21194661538876777`, -0.2212260409167615}}], 
                 
                 LineBox[{{0.11875498862445286`, -0.11402590859767}, {
                  0.21199969187690695`, -0.11142848052268554`}}], 
                 
                 LineBox[{{0.11873690750825217`, -0.0016719484495424644`}, {
                  0.21201777299310764`, -0.001633848065857508}}], 
                 
                 LineBox[{{0.11875394404154388`, 0.11068205471360332`}, {
                  0.21200073645981593`, 0.10816074137595226`}}], 
                 
                 LineBox[{{0.11880598300413148`, 0.22303321548511726`}, {
                  0.21194869749722833`, 0.2179581732093939}}], 
                 
                 LineBox[{{0.1188926738351157, 0.33537868039089797`}, {
                  0.2118620066662441, 0.3277613009085687}}], 
                 
                 LineBox[{{0.11901343715719806`, 0.4477156594734286}, {
                  0.21174124334416175`, 0.43757291443099366`}}], 
                 
                 LineBox[{{0.11916747543188436`, 0.5600414562361251}, {
                  0.21158720506947545`, 0.5473957102732528}}], 
                 
                 LineBox[{{0.11935378736567148`, 0.6723534952167256}, {
                  0.21140089313568833`, 0.6572322638976078}}], 
                 
                 LineBox[{{0.11957118556585646`, 0.784649346565157}, {
                  0.2111834949355033, 0.767085005154132}}], 
                 
                 LineBox[{{0.11981831685146349`, 0.8969267471318156}, {
                  0.21093636364989632`, 0.8769561971924288}}], 
                 
                 LineBox[{{0.1200936845637898, 1.0091836177177875`}, {
                  0.21066099593757, 0.9868479192114126}}], 
                 
                 LineBox[{{0.23672841891188912`, -1.025864729170063}, {
                  0.3160496246730306, -0.9767784007899368}}], 
                 
                 LineBox[{{0.23552511261119213`, -0.912729956589243}, {
                  0.31725293097372764`, -0.8677645807658015}}], 
                 
                 LineBox[{{0.2343668568453357, -0.7994082876052904}, {
                  0.3184111867395841, -0.7589376571447985}}], 
                 
                 LineBox[{{0.2332787877135963, -0.6858986212122665}, {
                  0.31949925587132344`, -0.6502987309328669}}], 
                 LineBox[{{0.23228854674212396`, -0.5722058958223623}, {
                  0.3204894968427958, -0.5418428637178155}}], 
                 
                 LineBox[{{0.23142500012224718`, -0.45834230217740546`}, {
                  0.32135304346267257`, -0.4335578647578168}}], 
                 
                 LineBox[{{0.23071644169467712`, -0.34432807559293493`}, {
                  0.3220616018902427, -0.3254234987373317}}], 
                 
                 LineBox[{{0.23018840696170664`, -0.2301916018609965}, {
                  0.32258963662321316`, -0.21741137986431458`}}], 
                 
                 LineBox[{{0.2298613588988459, -0.11596863173664017`}, {
                  0.3229166846860738, -0.10948575738371537`}}], 
                 
                 LineBox[{{0.22974860949388196`, -0.0017005420337378838`}, {
                  0.32302943409103785`, -0.0016052544816620889`}}], 
                 
                 LineBox[{{0.22985486381947634`, 0.11256821724138669`}, {
                  0.32292317976544344`, 0.1062745788481689}}], 
                 
                 LineBox[{{0.2301756862205782, 0.22679314975649748`}, {
                  0.32260235736434156`, 0.21419823893801365`}}], 
                 
                 LineBox[{{0.23069800382961198`, 0.34093274701895737`}, {
                  0.3220800397553078, 0.32220723428050935`}}], 
                 
                 LineBox[{{0.23140153866083113`, 0.4549510611352436}, {
                  0.3213765049240886, 0.4303375127691787}}], 
                 
                 LineBox[{{0.23226087297611003`, 0.5688194710217315}, {
                  0.32051717060880974`, 0.5386176954876464}}], 
                 
                 LineBox[{{0.23324776206682651`, 0.6825174962976261}, {
                  0.3195302815180933, 0.6470682628167072}}], 
                 
                 LineBox[{{0.23433332845897772`, 0.7960327154643969}, {
                  0.3184447151259421, 0.7557016362548921}}], 
                 
                 LineBox[{{0.23548987300612137`, 0.9093599903527538}, {
                  0.31728817057879843`, 0.8645229539714906}}], 
                 
                 LineBox[{{0.2366921716404657, 1.0225002618700363`}, {
                  0.31608587194445403`, 0.9735312750591638}}], 
                 
                 LineBox[{{0.3639840740124159, -1.0416575514005033`}, {
                  0.41081733265606385`, -0.9609855785594967}}], 
                 LineBox[{{0.36190067048510294`, -0.9292995241053932}, {
                  0.4129007361833768, -0.8511950132496514}}], 
                 
                 LineBox[{{0.3595108930993597, -0.8165559740519177}, {
                  0.4152905135691201, -0.7417899706981712}}], 
                 
                 LineBox[{{0.35678570915177377`, -0.7032846457269375}, {
                  0.4180156975167059, -0.6329127064181959}}], 
                 
                 LineBox[{{0.35372508917600953`, -0.5892933019767064}, {
                  0.4210763174924702, -0.5247554575634714}}], 
                 
                 LineBox[{{0.35039521602057855`, -0.47433888826790493`}, {
                  0.4244061906479012, -0.4175612786673173}}], 
                 
                 LineBox[{{0.3469865891380776, -0.35815731853766747`}, {
                  0.4278148175304022, -0.3115942557925992}}], 
                 
                 LineBox[{{0.34387462909117905`, -0.24055891280931221`}, {
                  0.43092677757730075`, -0.20704406891599889`}}], 
                 
                 LineBox[{{0.34161324287795786`, -0.12160631581597484`}, {
                  0.43318816379052183`, -0.1038480733043807}}], 
                 
                 LineBox[{{0.34076045524485804`, -0.0017855160229046227`}, {
                  0.43404095142362176`, -0.0015202804924953498`}}], 
                 
                 LineBox[{{0.3415652168710928, 0.11804917354008337`}, {
                  0.433236189797387, 0.10079362254947222`}}], 
                 
                 LineBox[{{0.34379201244545066`, 0.2370369279250988}, {
                  0.43100939422302903`, 0.20395446076941234`}}], 
                 
                 LineBox[{{0.34688730669760226`, 0.3546783229624126}, {
                  0.4279140999708775, 0.30846165833705413`}}], 
                 
                 LineBox[{{0.3502935445126816, 0.47090006677691926`}, {
                  0.42450786215579817`, 0.414388507127503}}], 
                 
                 LineBox[{{0.35362929911095253`, 0.5858872416988651}, {
                  0.4211721075575272, 0.5215499248105128}}], 
                 
                 LineBox[{{0.356699343222366, 0.6999035163584522}, {
                  0.4181020634461137, 0.6296822427558812}}], 
                 
                 LineBox[{{0.35943472644091706`, 0.8131932319828524}, {
                  0.4153666802275626, 0.7385411197364365}}], 
                 LineBox[{{0.3618341488416923, 0.9259502099100978}, {
                  0.4129672578267875, 0.8479327344141467}}], 
                 
                 LineBox[{{0.3639261339261006, 1.0383180626972264`}, {
                  0.41087527274237917`, 0.9577134742319736}}], 
                 
                 LineBox[{{0.4981156513302906, -1.047961057671426}, {
                  0.4987091184217491, -0.9546820722885742}}], 
                 
                 LineBox[{{0.4980786302949102, -0.9368865111369611}, {
                  0.49874613945712953`, -0.8436080262180834}}], 
                 
                 LineBox[{{0.498031055195357, -0.8258118501165316}, {
                  0.49879371455668275`, -0.7325340946335573}}], 
                 
                 LineBox[{{0.4979676628388357, -0.714736992418897}, {
                  0.49885710691320395`, -0.6214603597262365}}], 
                 
                 LineBox[{{0.4978789929967999, -0.6036617663007889}, {
                  0.4989457767552398, -0.510386993239389}}], 
                 
                 LineBox[{{0.4977461636815544, -0.4925857616403447}, {
                  0.4990786060704853, -0.3993144052948775}}], 
                 
                 LineBox[{{0.4975252560662559, -0.38150778617638764`}, {
                  0.49929951368578385`, -0.288243788153879}}], 
                 
                 LineBox[{{0.49708526502206696`, -0.2704230425550218}, {
                  0.4997395047299728, -0.1771799391702893}}], 
                 
                 LineBox[{{0.49578073641997394`, -0.1592933277012764}, {
                  0.5010440333320657, -0.06616106141907913}}], 
                 
                 LineBox[{{0.45326671917259365`, -0.013366104373244064`}, {
                  0.5435580505794461, 0.010060307857844092`}}], 
                 
                 LineBox[{{0.49570149475631514`, 0.15598298526073964`}, {
                  0.5011232749957246, 0.06285981082881595}}], 
                 
                 LineBox[{{0.49706538456173144`, 0.26711667588415633`}, {
                  0.4997593851903083, 0.17387471281035483`}}], 
                 
                 LineBox[{{0.4975164145229699, 0.3782018206206576}, {
                  0.49930835522906986`, 0.28493816067880906`}}], 
                 
                 LineBox[{{0.49774118917414456`, 0.48927989379548614`}, {
                  0.49908358057789515`, 0.39600868010893614`}}], 
                 LineBox[{{0.497875808974476, 0.6003559332610156}, {
                  0.49894896077756373`, 0.5070812332483623}}], 
                 
                 LineBox[{{0.4979654515848606, 0.7114311747655466}, {
                  0.49885931816717904`, 0.6181545843487868}}], 
                 
                 LineBox[{{0.49802943054417514`, 0.8225060402893286}, {
                  0.4987953392078645, 0.7292283114299604}}], 
                 
                 LineBox[{{0.49807738639330934`, 0.9335807057035015}, {
                  0.49874738335873037`, 0.8403022386207429}}], 
                 
                 LineBox[{{0.49811466847926816`, 1.0446552548924954`}, {
                  0.49871010127277154`, 0.9513762820367047}}], 
                 
                 LineBox[{{0.5936792016952294, -0.9574190643202576}, {
                  0.6251689311403704, -1.0452240656397425`}}], 
                 
                 LineBox[{{0.5919763444178698, -0.8469932824297336}, {
                  0.6268717884177298, -0.933501254925311}}], 
                 
                 LineBox[{{0.5899019504796795, -0.736814769880022}, {
                  0.6289461823559203, -0.8215311748700669}}], 
                 
                 LineBox[{{0.5873423085780107, -0.6270167299159439}, {
                  0.631505824257589, -0.7091806222291893}}], 
                 
                 LineBox[{{0.5841521566399699, -0.5178241131193128}, {
                  0.63469597619563, -0.596224646420865}}], 
                 
                 LineBox[{{0.5801716190965529, -0.4096234451008643}, {
                  0.6386765137390469, -0.48227672183435794`}}], 
                 
                 LineBox[{{0.5753135798039646, -0.30306690425048044`}, {
                  0.6435345530316352, -0.3666846700797862}}], 
                 
                 LineBox[{{0.5698413794782691, -0.19913286252709883`}, {
                  0.6490067533573307, -0.24847011919821227`}}], 
                 
                 LineBox[{{0.5649246060983409, -0.0987583592262054}, {
                  0.6539235267372588, -0.12669602989415013`}}], 
                 
                 LineBox[{{0.5627841238355046, -0.001438223548128827}, {
                  0.6560640090000952, -0.0018675729672711454`}}], 
                 
                 LineBox[{{0.5648088151134744, 0.09582692562534897}, {
                  0.6540393177221255, 0.12301587046420662`}}], 
                 LineBox[{{0.5696780194206881, 0.19609114400486838`}, {
                  0.6491701134149117, 0.24490024468964278`}}], 
                 
                 LineBox[{{0.5751566548835433, 0.2999302239620248}, {
                  0.6436914779520565, 0.36320975733744193`}}], 
                 
                 LineBox[{{0.5800396733878203, 0.40642429557216775`}, {
                  0.6388084594477795, 0.47886427833225453`}}], 
                 
                 LineBox[{{0.5840458560649251, 0.5145870516133646}, {
                  0.6348022767706748, 0.5928501148960132}}], 
                 
                 LineBox[{{0.5872572587134574, 0.6237567617399384}, {
                  0.6315908741221424, 0.7058289973743949}}], 
                 
                 LineBox[{{0.5898334207827065, 0.7335406247018791}, {
                  0.6290147120528934, 0.8181937270174099}}], 
                 
                 LineBox[{{0.5919204579193207, 0.8437100713191852}, {
                  0.626927674916279, 0.9301728730050594}}], 
                 
                 LineBox[{{0.5936330184062573, 0.9541298580603725}, {
                  0.6252151144293426, 1.0419016788688276`}}], 
                 
                 LineBox[{{0.6961141533511322, -0.9615247012214944}, {
                  0.7447573425680276, -1.0411184287385056`}}], 
                 
                 LineBox[{{0.6940153472262895, -0.8518117024087253}, {
                  0.7468561486928703, -0.9286828349463192}}], 
                 
                 LineBox[{{0.6916277378674175, -0.7424928839912823}, {
                  0.7492437580517423, -0.8158530607588067}}], 
                 
                 LineBox[{{0.6889328795173293, -0.6337053684499929}, {
                  0.7519386164018305, -0.7024919836951404}}], 
                 
                 LineBox[{{0.6859444086074012, -0.5256288731010831}, {
                  0.7549270873117584, -0.5884198864390948}}], 
                 
                 LineBox[{{0.6827421751375001, -0.4184814668803618}, {
                  0.7581293207816596, -0.4734187000548604}}], 
                 
                 LineBox[{{0.6795208276616265, -0.3124860657215142}, {
                  0.7613506682575332, -0.35726550860875245`}}], 
                 
                 LineBox[{{0.6766327295242255, -0.20778194326408916`}, {
                  0.7642387663949344, -0.23982103846122194`}}], 
                 LineBox[{{0.674567053131558, -0.10427774699926977`}, {
                  0.7663044427876017, -0.12117664212108577`}}], 
                 
                 LineBox[{{0.6737954814597971, -0.0015269215139137318`}, {
                  0.7670760144593626, -0.0017788750014862407`}}], 
                 
                 LineBox[{{0.6745234920741463, 0.10121194685598288`}, {
                  0.7663480038450134, 0.11763084923357271`}}], 
                 
                 LineBox[{{0.676556766606828, 0.20468540261194634`}, {
                  0.7643147293123317, 0.2363059860825648}}], 
                 
                 LineBox[{{0.6794278935718683, 0.3093509400888525}, {
                  0.7614436023472914, 0.3537890412106142}}], 
                 
                 LineBox[{{0.6826452434967968, 0.4153091794572861}, {
                  0.758226252422363, 0.46997939444713616`}}], 
                 
                 LineBox[{{0.6858515585788679, 0.5224253863232505}, {
                  0.7550199373402919, 0.5850117801861272}}], 
                 
                 LineBox[{{0.6888479838992183, 0.6304775259821609}, {
                  0.7520235120199414, 0.6991082331321725}}], 
                 
                 LineBox[{{0.691552005997316, 0.7392466927993667}, {
                  0.7493194899218438, 0.8124876589199223}}], 
                 
                 LineBox[{{0.6939485924007429, 0.8485518782633493}, {
                  0.7469229035184168, 0.9253310660608952}}], 
                 
                 LineBox[{{0.6960555778110358, 0.9582547620281582}, {
                  0.744815918108124, 1.037776774901042}}], 
                 
                 LineBox[{{0.8023954248681846, -0.9648344253811674}, {
                  0.8604994341345351, -1.0378087045788327`}}], 
                 
                 LineBox[{{0.8003317657526311, -0.8555032648957648}, {
                  0.8625630932500887, -0.9249912724592798}}], 
                 
                 LineBox[{{0.7980910954462376, -0.7465741179823848}, {
                  0.8648037635564821, -0.8117718267677041}}], 
                 
                 LineBox[{{0.7956989830509451, -0.6381423928302723}, {
                  0.8671958759517745, -0.6980549593148611}}], 
                 
                 LineBox[{{0.7932139971917336, -0.5303123041649257}, {
                  0.8696808618109862, -0.5837364553752521}}], 
                 LineBox[{{0.7907419315343114, -0.42318184320699037`}, {
                  0.8721529274684082, -0.46871832372823186`}}], 
                 
                 LineBox[{{0.7884461468021846, -0.31681422534074094`}, {
                  0.8744487122005351, -0.3529373489895257}}], 
                 
                 LineBox[{{0.7865426189736663, -0.21119639979663485`}, {
                  0.8763522400290534, -0.23640658192867625`}}], 
                 
                 LineBox[{{0.7852663153250939, -0.10619764459487228`}, {
                  0.8776285436776259, -0.11925674452548325`}}], 
                 
                 LineBox[{{0.7848070930998137, -0.0015562046108575699`}, {
                  0.878087765902906, -0.0017495919045424023`}}], 
                 
                 LineBox[{{0.7852401390945468, 0.10307973875314272`}, {
                  0.8776547199081728, 0.11576305733641287`}}], 
                 
                 LineBox[{{0.7864944517410772, 0.20806347331502373`}, {
                  0.8764004072616425, 0.23292791537948743`}}], 
                 
                 LineBox[{{0.7883826617944361, 0.31366032533573523`}, {
                  0.8745121972082837, 0.3494796559637315}}], 
                 
                 LineBox[{{0.7906701004610935, 0.4200049458475634}, {
                  0.8722247585416262, 0.46528362805685886`}}], 
                 
                 LineBox[{{0.7931395734911129, 0.5271133488597636}, {
                  0.8697552855116067, 0.5803238176496143}}], 
                 
                 LineBox[{{0.7956259706806379, 0.6349239422264538}, {
                  0.8672688883220817, 0.6946618168878796}}], 
                 
                 LineBox[{{0.798021892013251, 0.7433392836294098}, {
                  0.8648729669894688, 0.8083950680898793}}], 
                 
                 LineBox[{{0.8002675688051959, 0.8522550682511005}, {
                  0.8626272901975238, 0.921627876073144}}], 
                 
                 LineBox[{{0.8023366445299883, 0.9615755087555735}, {
                  0.8605582144727315, 1.0344560281736266`}}], 
                 
                 LineBox[{{0.9105560542563128, -0.9672991415365235}, {
                  0.974362167829967, -1.0353439884234765`}}], 
                 
                 LineBox[{{0.9086133119300668, -0.858156892990905}, {
                  0.976304910156213, -0.9223376443641396}}], 
                 LineBox[{{0.906567311031223, -0.7493885969205331}, {
                  0.9783509110550568, -0.8089573478295559}}], 
                 
                 LineBox[{{0.9044569577927729, -0.6410585821813399}, {
                  0.9804612642935069, -0.6951387699637934}}], 
                 
                 LineBox[{{0.9023462084271164, -0.5332276284576061}, {
                  0.9825720136591634, -0.5808211310825718}}], 
                 
                 LineBox[{{0.9003289970715764, -0.4259404901170751}, {
                  0.9845892250147031, -0.46595967681814715`}}], 
                 
                 LineBox[{{0.8985290136739515, -0.3192080855326549}, {
                  0.9863892084123282, -0.3505434887976117}}], 
                 
                 LineBox[{{0.8970896505386985, -0.21298750071809433`}, {
                  0.9878285715475813, -0.23461548100721674`}}], 
                 
                 LineBox[{{0.8961512149915823, -0.10716759991768075`}, {
                  0.9887670070946972, -0.11828678920267478`}}], 
                 
                 LineBox[{{0.8958187466776348, -0.001570793667914051}, {
                  0.989099475408645, -0.0017350028474859217`}}], 
                 
                 LineBox[{{0.896132190373483, 0.10402262498249243`}, {
                  0.9887860317127968, 0.11482017110706316`}}], 
                 
                 LineBox[{{0.8970538476626813, 0.20983303114044294`}, {
                  0.9878643744235984, 0.23115835755406822`}}], 
                 
                 LineBox[{{0.8984802368149774, 0.31603973144603037`}, {
                  0.9864379852713022, 0.34710024985343635`}}], 
                 
                 LineBox[{{0.9002716108327289, 0.4227559698965297}, {
                  0.9846466112535509, 0.46253260400789253`}}], 
                 
                 LineBox[{{0.9022842771015435, 0.5300265371827287}, {
                  0.9826339449847363, 0.5774106293266492}}], 
                 
                 LineBox[{{0.9043937542392116, 0.637841832440211}, {
                  0.9805244678470681, 0.6917439266741225}}], 
                 
                 LineBox[{{0.9065051821546826, 0.7461578283946715}, {
                  0.978413039931597, 0.8055765233246174}}], 
                 
                 LineBox[{{0.9085537686972973, 0.8549140137908753}, {
                  0.9763644533889824, 0.9189689305333691}}], 
                 LineBox[{{0.9104999537219516, 0.9640460379294563}, {
                  0.974418268364328, 1.031985498999744}}], 
                 
                 LineBox[{{1.0197063264827526`, -0.9691456243077161}, {
                  1.087235258687087, -1.033497505652284}}], 
                 
                 LineBox[{{1.0178852574901294`, -0.8600976414604542}, {
                  1.0890563276797103`, -0.9203968958945903}}], 
                 
                 LineBox[{{1.0160067721532022`, -0.7513920886165573}, {
                  1.0909348130166376`, -0.8069538561335315}}], 
                 
                 LineBox[{{1.0141124741067988`, -0.6430736267042728}, {
                  1.0928291110630406`, -0.6931237254408604}}], 
                 
                 LineBox[{{1.012262567433221, -0.5351791855810315}, {
                  1.0946790177366188`, -0.5788695739591463}}], 
                 
                 LineBox[{{1.0105370198944092`, -0.42772862655905675`}, {
                  1.0964045652754304`, -0.46417154037616554`}}], 
                 
                 LineBox[{{1.0090325713670547`, -0.3207133430150997}, {
                  1.097909013802785, -0.349038231315167}}], 
                 
                 LineBox[{{1.007853593467062, -0.21408544876968116`}, {
                  1.0990879917027776`, -0.23351753295562996`}}], 
                 
                 LineBox[{{1.0070964630014563`, -0.10775206792912267`}, {
                  1.0998451221683834`, -0.11770232119123285`}}], 
                 
                 LineBox[{{1.0068304136578092`, -0.0015795303746427391`}, {
                  1.1001111715120306`, -0.0017262661407572335`}}], 
                 
                 LineBox[{{1.0070812081757996`, 0.10459058158585097`}, {
                  1.0998603769940403`, 0.11425221450370464`}}], 
                 
                 LineBox[{{1.0078245404894106`, 0.21091707237204618`}, {
                  1.0991170446804288`, 0.23007431632246497`}}], 
                 
                 LineBox[{{1.0089922679531156`, 0.31753463615158417`}, {
                  1.097949317216724, 0.3456053451478826}}], 
                 
                 LineBox[{{1.010488541044462, 0.4245374821036591}, {
                  1.0964530441253775`, 0.4607510918007632}}], 
                 
                 LineBox[{{1.0122089719213132`, 0.5319747913858567}, {
                  1.0947326132485267`, 0.5754623751235212}}], 
                 LineBox[{{1.0140564276956308`, 0.6398561963437817}, {
                  1.0928851574742087`, 0.6897295627705518}}], 
                 
                 LineBox[{{1.0159503718935, 0.748162512706132}, {
                  1.09099121327634, 0.803571839013157}}], 
                 
                 LineBox[{{1.0178300140205816`, 0.856857170065538}, {
                  1.0891115711492578`, 0.9170257742587067}}], 
                 
                 LineBox[{{1.0196532373558487`, 0.965895630114346}, {
                  1.0872883478139908`, 1.0301359068148541`}}], 
                 
                 LineBox[{{1.129423536468764, -0.970561181048591}, {
                  1.1995414117846361`, -1.032081948911409}}], 
                 
                 LineBox[{{1.127707518719375, -0.8615604601394502}, {
                  1.2012574295340248`, -0.9189340772155942}}], 
                 
                 LineBox[{{1.1259633470503412`, -0.7528745469737762}, {
                  1.2030016012030584`, -0.8054713977763126}}], 
                 
                 LineBox[{{1.1242318749131188`, -0.6445355779685737}, {
                  1.204733073340281, -0.6916617741765597}}], 
                 
                 LineBox[{{1.1225681150249325`, -0.5365666958738406}, {
                  1.2063968332284676`, -0.5774820636663371}}], 
                 
                 LineBox[{{1.121040825941405, -0.428974997834372}, {
                  1.2079241223119948`, -0.46292516910085024`}}], 
                 
                 LineBox[{{1.119728915577608, -0.3217437908772974}, {
                  1.2092360326757918`, -0.3480077834529693}}], 
                 
                 LineBox[{{1.1187137775522986`, -0.2148261500228251}, {
                  1.210251170701101, -0.232776831702486}}], 
                 
                 LineBox[{{1.118067910889669, -0.10814258456298237`}, {
                  1.2108970373637309`, -0.11731180455737317`}}], 
                 
                 LineBox[{{1.1178420864111283`, -0.001585347892075035}, {
                  1.2111228618422714`, -0.0017204486233249373`}}], 
                 
                 LineBox[{{1.1180549466197305`, 0.10496999164900467`}, {
                  1.2109100016336694`, 0.11387280444055092`}}], 
                 
                 LineBox[{{1.118688906575195, 0.21164812404708358`}, {
                  1.210276041678205, 0.22934326464742757`}}], 
                 LineBox[{{1.1196940244535984`, 0.31855749261166294`}, {
                  1.2092709237998014`, 0.3445824886878038}}], 
                 
                 LineBox[{{1.120998264131235, 0.42577852843440206`}, {
                  1.2079666841221648`, 0.4595100454700202}}], 
                 
                 LineBox[{{1.1225203176318186`, 0.5333591198135809}, {
                  1.2064446306215815`, 0.574078046695797}}], 
                 
                 LineBox[{{1.1241810714561484`, 0.6413167795382795}, {
                  1.2047838767972514`, 0.6882689795760539}}], 
                 
                 LineBox[{{1.125911394290171, 0.7496450071935168}, {
                  1.2030535539632288`, 0.8020893445257722}}], 
                 
                 LineBox[{{1.1276558456348744`, 0.8583210290622015}, {
                  1.2013091026185254`, 0.915561915262043}}], 
                 
                 LineBox[{{1.1293731658519903`, 0.9673128890917766}, {
                  1.1995917824014095`, 1.0287186478374235`}}], 
                 
                 LineBox[{{1.239489799907061, -0.9716733492577021}, {
                  1.311498511429899, -1.030969780702298}}], 
                 
                 LineBox[{{1.2378612608493902`, -0.8626955798573054}, {
                  1.3131270504875696`, -0.9177989574977391}}], 
                 
                 LineBox[{{1.2362240282108854`, -0.7540097567861137}, {
                  1.3147642831260746`, -0.8043361879639751}}], 
                 
                 LineBox[{{1.234617188811837, -0.6456397377648099}, {
                  1.3163711225251233`, -0.6905576143803235}}], 
                 
                 LineBox[{{1.2330909553409324`, -0.5376001955840647}, {
                  1.3178973559960279`, -0.5764485639561131}}], 
                 
                 LineBox[{{1.2317055674320314`, -0.4298911336398831}, {
                  1.3192827439049286`, -0.46200903329533916`}}], 
                 
                 LineBox[{{1.2305277220429507`, -0.3224923233398699}, {
                  1.3204605892940091`, -0.3472592509903968}}], 
                 
                 LineBox[{{1.229624148179464, -0.2153591723263559}, {
                  1.3213641631574962`, -0.23224380939895523`}}], 
                 
                 LineBox[{{1.2290528512917358`, -0.10842189815954058`}, {
                  1.3219354600452242`, -0.11703249096081496`}}], 
                 LineBox[{{1.2288537621243212`, -0.001589499860814045}, {
                  1.3221345492126386`, -0.0017162966545859273`}}], 
                 
                 LineBox[{{1.229041412555994, 0.1052413278735825}, {
                  1.3219468987809662`, 0.1136014682159731}}], 
                 
                 LineBox[{{1.2296020968955617`, 0.21217407966657406`}, {
                  1.3213862144413986`, 0.2288173090279371}}], 
                 
                 LineBox[{{1.2304965516448712`, 0.3193002733976842}, {
                  1.3204917596920889`, 0.34383970790178253`}}], 
                 
                 LineBox[{{1.231667177439606, 0.42669040627581944`}, {
                  1.319321133897354, 0.4585981676286029}}], 
                 
                 LineBox[{{1.2330473700969997`, 0.5343898294417936}, {
                  1.3179409412399603`, 0.5730473370675843}}], 
                 
                 LineBox[{{1.2345703249620903`, 0.6424194486708343}, {
                  1.3164179863748697`, 0.687166310443499}}], 
                 
                 LineBox[{{1.2361755448138618`, 0.7507797852066922}, {
                  1.3148127665230982`, 0.8009545665125969}}], 
                 
                 LineBox[{{1.2378124921913525`, 0.8594565205174997}, {
                  1.3131758191456075`, 0.9144264238067449}}], 
                 
                 LineBox[{{1.2394417513114044`, 0.9684259987901898}, {
                  1.3115465600255556`, 1.0276055381390103`}}], 
                 
                 LineBox[{{1.349783939769824, -0.9725668683604074}, {
                  1.4232277346506965`, -1.0300762615995926`}}], 
                 
                 LineBox[{{1.3482279114455753`, -0.8635989905255663}, {
                  1.424783762974945, -0.9168955468294782}}], 
                 
                 LineBox[{{1.3466766562961983`, -0.7549043367103502}, {
                  1.426335018124322, -0.8034416080397386}}], 
                 
                 LineBox[{{1.3451673129496242`, -0.6465010664533621}, {
                  1.4278443614708958`, -0.6896962856917712}}], 
                 
                 LineBox[{{1.3437460238997634`, -0.5383983577857198}, {
                  1.4292656505207568`, -0.5756504017544581}}], 
                 
                 LineBox[{{1.3424665378272589`, -0.43059200939678016`}, {
                  1.430545136593261, -0.46130815753844207`}}], 
                 LineBox[{{1.3413868439869017`, -0.3230602558685193}, {
                  1.4316248304336185`, -0.3466913184617474}}], 
                 
                 LineBox[{{1.3405636962596215`, -0.2157609676096341}, {
                  1.432447978160899, -0.23184201411567704`}}], 
                 
                 LineBox[{{1.3400455728736769`, -0.1086315667590294}, {
                  1.4329661015468436`, -0.11682282236132614`}}], 
                 
                 LineBox[{{1.3398654395396206`, -0.0015926119794547825`}, {
                  1.4331462348808994`, -0.0017131845359451901`}}], 
                 
                 LineBox[{{1.3400352172824654`, 0.10544499101868092`}, {
                  1.4329764571380548`, 0.11339780507087469`}}], 
                 
                 LineBox[{{1.3405436638887678`, 0.21257048438941653`}, {
                  1.4324680105317524`, 0.22842090430509462`}}], 
                 
                 LineBox[{{1.3413583734893257`, 0.3198637167388062}, {
                  1.4316533009311945`, 0.34327626456066057`}}], 
                 
                 LineBox[{{1.3424312286220677`, 0.42738783890201365`}, {
                  1.4305804457984523`, 0.45790073500240863`}}], 
                 
                 LineBox[{{1.3437056149670534`, 0.5351856043996087}, {
                  1.4293060594534668`, 0.5722515621097692}}], 
                 
                 LineBox[{{1.3451234910708345`, 0.6432793545715325}, {
                  1.4278881833496857`, 0.6863064045428009}}], 
                 
                 LineBox[{{1.3466309228040974`, 0.7516737567045947}, {
                  1.4263807516164229`, 0.8000605950146944}}], 
                 
                 LineBox[{{1.3481815124096888`, 0.8603599662248913}, {
                  1.4248301620108315`, 0.9135229780993532}}], 
                 
                 LineBox[{{1.3497378484023326`, 0.9693200313538225}, {
                  1.4232738260181876`, 1.0267115055753775`}}]}}}}, {
             GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, Epilog -> {
                DynamicBox[
                 Typeset`ToBoxes[
                  
                  DynamicModule[{
                   CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[
                    Hold[
                    Nearest[CompressedData["
1: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
                    "] -> CompressedData["
1:eJwVmXs00/8fx6VQhOiCSoSkiESK5KWUVCpdyC0qoUiEIhGJoivCV1LIJcmt
i+S2N6XI3NLmtjGbjc02m2uR+L1//3Cc53nt+Xw9H6+z7XOsP+97wl1URESk
AP/4/2+/5FjDI8F0FPosNfNvoQA1qS9vVNTsRZrhcx/JBkJ0vQg+vAihIw+X
ZZFdm3iodjy3KWh9L9p/YpHO71Ye8guUE74LpSPPjUqyjBw2avJcePKYci/a
9Cp4z6qdHGSq55Bx9xYdZRb917pcjYUMxwLGcpR60S+DIHXpDBZKSCE3KEbQ
EVOtlH7xJR3FqNzMvL2qFwV2dXzol2AgXlFEo/ttOhJmTSz+vJ2KSGMaL4eW
96KYKGVPHRoVda44eMU7ko5MQg4eaNUloznNRDuqXC8S7//i41FERj7bDgs2
3qGjJo9VyQo2TegX98kpt2U4/7upM1MzTah21daFqVhXP7GCHB1dhTarf9cJ
l+1FyjkjmhT9avSg072/BuuSLSVBvV8dUXKmo78+1qd+mN3JdXdCt07+3pOG
dQ9W1iaP4kooebOjOATrq5PuvS+yqwL5rr6LOlg/LcnPFGcRISbj4jlH7O94
zHDvuUdN8G7++2p/nP/YWdv+/dMkOHQ85V8Lzl+7urYpLYgM5M/7X17B++cE
aTtuEaGCKC11ioz3z/4plL6QR4XtlqUf1XF/ah01Fa/u0GFPXeUPb9zfy+1t
dmE8OhyvYMY/xf0/VS0ttpZggSTVWfYh7v9QuwvKj2KBXCn3Zw3md52Z0Kr0
gA33B48+0cf8bk8u/PdxLQcaZW76FGH+Cqo68zKyPFA02Gpvh/nPZvA3//eR
BwuXShe64vuZI3dXbH0qgNydS7vHN/QipUvnPDQ1hTDFnH400UNB0RuObJ79
LEDy9ic3K4t3oPXGOX62ukI02mLTHt9HQQn3ZF0bDXhI4cosK1y0AyltEjsm
9p2Hymw3lzTTKeiS8zr3siI2Oj6ktnjfPBlp+gRwzfU4KOhRsUo2k4LsZjVn
0CYWiit+keIzS0brBof+nE1hIRvxp3fkhigocq1GVn82HX02qjAUmSEjcp/n
2MUFDBTTeb5UnkNBIV9DL2ibU1GE+7Do/G98RxeSpMpJVOSnlbwsZ5iCKpaY
Pf9kREYpK8peX54io3s2LUrhuWT09/LS0O9cCjpN8aKWOjYh6TZz08OTZFRu
+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
/9kidclHCP8DFyv1IQ==
                    "]]]][#/{1.88719858621026, 1.9993373334446}]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                   If[
                   CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                   TraditionalForm, Graphics]]}, DisplayFunction -> Identity, 
              AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, Frame -> True, FrameLabel -> {
                FormBox["x", TraditionalForm], 
                FormBox["y", TraditionalForm]}, FrameStyle -> Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLinesStyle -> Automatic, ImageSize -> 250, 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "TransparentPolygonMesh" -> True}, 
              PlotRange -> {{-0.500692749, 1.38650583721026}, {-1.00132156498,
                0.9980157684646}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.05], 
                 Scaled[0.05]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Fewer points", "input" -> "SlopeField__Fewer points"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More points", "input" -> "SlopeField__More points"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Slope field", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Vector field", "input" -> 
           "SlopeField__Vector field"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Slope field", "input" -> "SlopeField__Slope field"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Direction field", "input" -> 
           "SlopeField__Direction field"}, {}]}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Plots of sample individual solution", "scanner" -> 
     "ODE", "id" -> "PlotsOfSampleIndividualSolution", "position" -> "600", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1: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
l6lkMvwfwX4WPQ==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1478398#1"]& ]}}, {}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox["y", TraditionalForm], None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox["y", TraditionalForm]}, 
                    AxesOrigin -> {0, 0.8002826994257484}, AxesStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                    DisplayFunction :> Identity, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                    Method -> {
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "ScalingFunctions" -> None}, PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "(", "0", ")"}], "\[LongEqual]", "1"}], 
                    "}"}], TraditionalForm], PlotRange -> {All, All}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}, 
                    Ticks -> {Automatic, Automatic}}], "\" \"", 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1478424#1"]& ]}}, {}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.5], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["y", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "y", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm], None, None}, DisplayFunction -> 
                    Identity, PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox["y", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "y", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                    DisplayFunction :> Identity, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                    Method -> {
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "ScalingFunctions" -> None}, PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "(", "0", ")"}], "\[LongEqual]", "1"}], 
                    "}"}], TraditionalForm], PlotRange -> {All, All}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}, 
                    Ticks -> {Automatic, Automatic}}], "\" \"", 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"y", "(", "0", ")"}], "\[LongEqual]", "1"}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Right}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{None}}, "Rows" -> {None, None}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}], "Column"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Sample solution family", "scanner" -> "ODE", "id" -> 
     "SampleSolutionFamily", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                AbsoluteThickness[1], {{
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1:eJxN1H0w1HkcB/A9klNOm2Wqk5ycEZFaLHdNq7VtV2rFrpTMkTxfhU2dHrBK
HaWy2HNZXUvJhi3ClbLW08pTbFvkqWQ6EirPoqvc3czd5/P7znznO68/vn98
3vOZt/G+ME6AGolEkvxz/32F/O7iLC0GnfTf0ZyXIz/NnAMPUtRMDzstcvzf
vGfKqRTeErBdhqpzmGEE7mdW3JcwrMGOkoIPPaK1YIaX0dIh4TpwOTOASzpr
A/64qaLJkmcPbjnBrj3DcAT7aMoO1RtuBPeSR9VaROi1K0pNOoUM9HcvA0cS
mGB/i7BJA94PYErdGPUIYwd4YK7u03s+erPjzfrjcnRENse60tAVzA6Q1NaK
0L8oH008ErqB319N9BhI4II9rfoc9Hi7wJvIDomhDB9wyWr6dMFedA2d6zvG
RwfH59kflqNXXI0flxnuBbev98mqFqH5i3U0WoS+4Kr7C1/1JfhhnrdTDCi8
ILDvY8tyHiMMfGXVy2hdNzQlLIdevBd9bMircpKPHtt/QhEpR5clNQzIDcPB
GjLpjEKErivhUVVCHs6vG6U9lBABHtWvvmjIiwTLJlIPXmDwwS73ZlbNd0ZX
aIX1xXDQdG+BV7gf+uaeHGfuGbRng4nlsgb0uhdOMZxVseA8jZmQngJ0q2V7
0bT8JP5X5q42fx4H/jJTWpO2LAH88O14qMtWAZi6j9KwZRt6snm9CZONjkjK
brd3Q/u3tW009kQ/Y5XqTQajR2LiqtMT0KzYEFp/HTrewfRk1OZk8JoTAwVS
ZgqYlPOhh0IXgkNpxa9INpfA3UFOe25NicGByrfmr9dmg1Mp17okRjfAHtsq
uaf9pOBcn8RmB+dCMFfdJ9nYsQhsaWGfN+hdAm52z5LYet3BPN17qsxdSrEv
9BTS3Qfug8PaOziUIBl4qitvC/eCHOcJiXXeurMSbKuXdd2KUwXW4hlo6gRU
gy/LadtsA2sw7927889EK8Dub1JvHBfUgm02Z1/MT36A/XgtcRM7tw68MF+t
yaygHux91lclLmwAP8+tSXpS3wg2qPcps1I2gXdpXfr21JuHYP2O0AVSjRZw
wDu6+E9tJXjBdVrDXf1H4JPRrUfmMtDPRM8zzb5RgSVktX7zQvS9ewddDe0f
g5mZkZ26jehhzxd249wn4Dut1Z/Lu9FeoW8KasJawbreGRO/f0Czj/uX9Sa3
gaePFYXYmT3Ffds5P41VjH54e2wpaXs77sO4zvBP3ehZsyAXVXAH5slWjzJT
78T9yPgcShaiFfwdcw4Exy0vSvIluIkvLSwi+OjYkQn3X9HiTK+o9DT0cvOI
jJXpaNeyLh27K2h2cWPjnhvoPoppeq4MfSouXuzej87VTuZGE8xJk2rmEFyW
vyz8PcHDL5sYolfoQ1cFr18MoL/wv8zcP4Ru71VYnxpBmzin9xbOEuZVbc9Z
rNOF/TIZfOB7glkbfqP6EWy0waKihODkT+aduxahXbME5CtkdGrEX+ctKOgS
+g4Zcyk6xcN66ueV6Gvh+xRigp9WSVLrCaYuCKF+bYJupj0ILyc4zmh4VN0U
/ZV172eBGXrRFr5bviW6wplh2kpw6QX92Y8EL2mbzHSxQscevDg2RrBRv1Wa
gzV6ZmTF29p16JtO5jXvCHbsYqUvoaITO/5ghRDcoM8Ta9ugR4vcPbi2aLF/
nFUUwZE/KuZdJ3iNaXTxNMGV5MbFIjv0rblzg9UEv6Z5Vw0T3BqznreBhlYm
sbYGEpw36GucRPC584LZuwSnHFWpegn+G7YWirk=
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
Xkf+Dwui3XY=
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
bsc15P8ASKzn5g==
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
GbqIOOpkc3MX8b0/irgf4yn8H2Hfcm4=
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
dgX5P4W28lY=
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
1qB56yP/HwQtQ1o=
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
KeKIM42NncQP/ihi98VS+D+e6Xze
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1:eJwd1Hk01ekfB3CpRpZEMkQSMlIZRWHql3eXzESDLBPSJNmncl2mqYRrqSiV
a0lcZalsYWSpFClbltzL/aZ0rxYVCdlCpMXv+c5zznOe8/rj+eP9Pp/z0djP
tPcSFxMTyyWXfpPYXWVZkgzT6/8dChLzcqpPmM+a7jHX/c/9CuLaf5stgliv
MI8263nbZAJLCYUp0rm0N6YJhIMMdQT5LMym3Wt+/24uQx+tMw/TaCO3eOYl
dx2ilstzaTNc1ZUHktbjnrxdCu175l4OYqcN0TwmTKL9ddv9R2tZxlBfeOw8
bf5x64aTDCA4pSuMtptEVWCT2lYUG10Mod0tNyrO527FZO/WYNrrlldoCZMY
KDmy9/B//uWN90iMOYZ9av+i7bmaOaHK+g3Bx/XsaSs0jhkcZtjilT9HgXbf
bOO3KbYtXp61k6f9K4qagqttoaEvu4h20DV7/QdqOxEkFixF29ort6GBuxO/
PVWdQ/tUW/t4e5IdbtvEDOUTT12J3dUX44C8wHl1tF30ekyWsJzQcer0Ptrb
5Exi/Rlu2N390CuPuHyN6afifW7wXmHlTrvO1MF9jO2Gmz1Ne2j7Rl83/rva
DStmKhxoL78S/bFKbR90nD0YtDs3u2XVcvfhS3e3Km22vOx8fpI7yrXZvFzi
mrvS73piPMA6vl2LtltJgqoCywfKzrKp2cTu1Np7LAYTt85cKcwiTl/1JnSx
HRN+J7Ov0lZg5piW7WNCdeoql/axAdcHE2wmwpAYQ3vswPH6I9VMbPLc7Em7
Mq65r1otAGe/lajQnl9VOF3PDQCXaXIik7ixnGUgSGJht911yww6/+IQmYGY
IByU1ky/RDyqWHtejXUEz13cDyUTV40nHjrHYEM1d0vmKWKbO9OrfrBiY7/s
5bO070sye8Ls2dgoP3WUtulejmuABxvsfq4d7aLdOVYOJ9m42pMlTtulWWvt
0mY2dOYXeZwkXv/KLMx+VTg0R25rnCC+Pn/a72VxON56Z56LIO5Y21n6qToC
Cb2VK0Po/235a3RfRMF60QXbAOIFmYV1yUtj4K6UznEkbh366G9jyUFazZ44
GWKD/QrN23dw8Kox1pf2BG+zlrk1B75DNxm0g+KudRrbcaCU/GVcmp7XJ0+2
arhwULLnd2fazy0qlkz4cjBZPneFFPFIWFRtagwHFWbNBRLEFuF+Rr2NHHTt
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
wyrihKMCQTexbZ7YhXji/wM5F0ql
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
yP8BwsD8xg==
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
GPwfV3ZzjA==
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
tAbDWx/5/0E3Tco=
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1: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
dchp54eHx5E9BmUWMpD/B+3qH5o=
                   "]]}, {
                  RGBColor[0.237736, 0.340215, 0.575113], 
                  BSplineCurveBox[CompressedData["
1:eJwd1Ak4ldkfB3DL2BohMkphyqArhpGt+ru/bjcqJeuQNIRsTbluTaksN0kM
U64lZU922cKMyr5lK0u23hf3FUq2XGQry/+8nec5z3k+z3nOc87ve85zdjkx
LFz4eHh4MlEnx2hWf3GKCI268b0RIPRDRuUd+gbVSnX3d49L8Sn9dVgcPGFk
lTRzoH0hkikD0eUtK6R14juxSZoCbFY4t0j6A73qZSZNA2bybnwkDZkFXzlx
mlAmHjZCmmansG0i+jfoWQkdIl1Bd7Hk+XsfNGjG4aRXj1S1qjH1YGo2p510
m49JQxANYIHysYS0g1D55Sa5Q6C2n/8Z6SEJLl9b3CHQCeXNI60p/1wRi6ZB
zWxK2nfvH3adCaFDeS8zkvR5VcaXHcyjAMsm7qSlGme1rtJMwT92aXUdeWyj
cW2JZQpiP8mvkDaCvKablaYgNfK/BdJX0iw0quXMwMfTeZq0iUtmQ0OcGdQZ
Ww2SvtveMd8RbQ77tzeUkV56EmY9FmIJzzaPXCZtqz6qv5VpA5iVRMsa8hEJ
/TBPmgMIn9XcuYpcspe6WHDOAZYkWVtJ11EtHWdZDnBG9pUoaffgHL2/Kh2A
JWuw9g1Z/knwXLncOaAPtQ2S7jvokFIbdw7yAgISSbO2iAm0RTuC+E5FGdI1
L3/8OBriDJsKbOZXyDyfRe6QYroBYXLXdAnZ8a1aBZPGgObprAdc5KQ9w36S
5gy4YHHoLmkpRga1+BwDqrnt10jfmLCr/sJiwH28z4b07J8+9d6VDMh1Ct1O
uiy8eaxSzgu4R27GzyALlOcu18d5Qax5UOxn5MYSplZnNBOuhh3znyLrl/QV
nQi5AicCAifGkLnStfflmN5w/WqrySBy+XzUpXs0FnjLG+rVIp96sbxH0JgF
9neTpUlXiTBG/S1Y0FTAna9Bptqz7bycWaB41LuQdN6ZDGPLIBbMBUtTSNs2
K6ptb2bBinnMtmrk34jD/hZ7bkGmUDa3AjlHYNmDU3AL7qxIBr1A7lbrK1qs
DAD60jK1kFzfnr2XMhgIB2R/WYxHFn6cWxezPQTST6a4XER+PT3neeo4G0Qe
1C1w1wnQcpJqPnaCDWfq9YtJf3lzUJFuwoZvMelepK+Ep/XpmbOBo+Q6OYN8
vqfn0C5bNmz6dHvoM/KA4fOtX9zZIDmt2jyFPOMfWBsbwgaHy9rRn5ANb3no
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
d3YOIT/7s5Q1EY/B/wHb84dO
                   "]]}}}, PlotLabel -> None, ImageSize -> 240, Axes -> True, 
               PlotRange -> All, AspectRatio -> 
               NCache[GoldenRatio^(-1), 0.6180339887498948], AxesLabel -> {
                 FormBox["x", TraditionalForm], 
                 FormBox["y", TraditionalForm]}, PlotLabel -> FormBox[
                 RowBox[{"{", 
                   RowBox[{"y", "(", "0", ")"}], "}"}], TraditionalForm]], 
              "\"  \"", 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{"\"sampling \"", 
                   RowBox[{"y", "(", "0", ")"}]}, "RowDefault"], "\[NoBreak]",
                  "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Interactive differential equation solution plots", 
     "scanner" -> "ODE", "id" -> 
     "InteractiveDifferentialEquationSolutionPlots", "position" -> "800", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ = True, 
                 CalculateScan`ODEScan`Private`iSQ$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                 False, $CellContext`Y1$$ = 0.7853981633974483, 
                 CalculateScan`ODEScan`Private`yTS$$ = {1}, 
                 CalculateScan`ODEScan`Private`yyTS$$ = {1}, 
                 CalculateScan`ODEScan`Private`\[CapitalDelta]x$$ = 
                 0.2575795557527179, Typeset`show$$ = True, 
                 Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu",
                  Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
                 "\"untitled\"", Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[$CellContext`Y1$$], 0.7853981633974483, 
                    $CellContext`y[0]}, -1.5550883635269477`, 
                    1.5550883635269477`}, {{
                    Hold[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$], 
                    True, "show"}, {
                    True -> "solution or derivatives", False -> 
                    "generalized phase plots"}}, {{
                    Hold[CalculateScan`ODEScan`Private`yTS$$], {1}, ""}, 
                    Dynamic[
                    Map[# -> Dynamic[
                    Style[
                    Derivative[# - 1][$CellContext`y], 
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    Black, Gray]]]& , 
                    Range[1, 1 + 1]]]}, {{
                    Hold[CalculateScan`ODEScan`Private`yyTS$$], {1}, ""}, 
                    Dynamic[
                    MapIndexed[Part[#2, 1] -> Dynamic[
                    Style[
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
2420208[
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
2420208["`1` vs. `2`", 14246], {
                    Derivative[
                    Part[#, 1]][$CellContext`y], 
                    Derivative[
                    Part[#, 2]][$CellContext`y]}], 
                    If[
                    Not[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$],
                     Black, Gray]]]& , {{0, 1}}]]}, {{
                    Hold[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$], 
                    0.2575795557527179, 
                    Subscript["x", "max"]}, -1, 1}, {{
                    Hold[CalculateScan`ODEScan`Private`iSQ$$], True, ""}, {
                    True, False}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Column[{
                    Style["Initial conditions:"], 
                    Manipulate`Place[1]}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Column[{
                    Manipulate`Place[2], 
                    Dynamic[
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ === 
                    True, 
                    Manipulate`Place[3], 
                    Manipulate`Place[4]]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
2420208["`1`\[Hyphen]range", {
                    Style["x", Italic]}], 
                    Manipulate`Place[5], 
                    Row[{
                    Manipulate`Place[6], " vertical image stabilization"}]}, 
                    Dividers -> {None, {
                    False, False, True, False, True, False, False}}], 
                    ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " ", "More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$2424518$$ = 
                 False, $CellContext`Y1$2424519$$ = 0, 
                 CalculateScan`ODEScan`Private`functionOrPhasePlotQ$2424520$$ = 
                 False, CalculateScan`ODEScan`Private`\[CapitalDelta]x$\
2424525$$ = 0, CalculateScan`ODEScan`Private`iSQ$2424526$$ = False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ = 
                    True, CalculateScan`ODEScan`Private`iSQ$$ = True, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, $CellContext`Y1$$ = 0.7853981633974483, 
                    CalculateScan`ODEScan`Private`yTS$$ = {1}, 
                    CalculateScan`ODEScan`Private`yyTS$$ = {1}, 
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$ = 
                    0.2575795557527179}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$2424518$\
$, False], 
                    Hold[$CellContext`Y1$$, $CellContext`Y1$2424519$$, 0], 
                    Hold[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$\
2424520$$, False], 
                    Hold[
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$, 
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$2424525$$, 
                    0], 
                    Hold[
                    CalculateScan`ODEScan`Private`iSQ$$, 
                    CalculateScan`ODEScan`Private`iSQ$2424526$$, False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> 
                  Module[{
                    CalculateScan`ODEScan`Private`eqs$, 
                    CalculateScan`ODEScan`Private`sol$, 
                    CalculateScan`ODEScan`Private`addInits$, 
                    CalculateScan`ODEScan`Private`nds$, 
                    CalculateScan`ODEScan`Private`xRanges$, 
                    CalculateScan`ODEScan`Private`xRange$, 
                    CalculateScan`ODEScan`Private`IsPurelyRealQ$, 
                    CalculateScan`ODEScan`Private`yPlotRe$, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$, 
                    CalculateScan`ODEScan`Private`yPlotReIm$, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$,
                     CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$, CalculateScan`ODEScan`Private`yyPPlotRe$}, 
                    CalculateScan`ODEScan`Private`eqs$ = 
                    Flatten[{{
                    Derivative[
                    1][$CellContext`y][$CellContext`x] == $CellContext`x (-1 + 
                    2 $CellContext`x)^(-1) $CellContext`y[$CellContext`x]}, \
{}, CalculateScan`ODEScan`Private`addInits$ = Thread[{
                    $CellContext`y[0]} == Tan[{$CellContext`Y1$$}]]}]; 
                    CalculateScan`ODEScan`Private`sol$ = Quiet[
                    Check[CalculateScan`ODEScan`Private`nds$ = Quiet[
                    NDSolve[
                    CalculateScan`ODEScan`Private`eqs$, $CellContext`y, \
{$CellContext`x, 0, 0 + Sign[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]
                     Tan[0.999 Pi 2^(-1) 
                    Abs[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]^(1/
                    8)]}, PrecisionGoal -> ControlActive[4, Automatic], 
                    AccuracyGoal -> ControlActive[4, Automatic], MaxSteps -> 
                    ControlActive[10^4, 5 10^4]], {
                    MessageName[NDSolve, "mxst"], 
                    MessageName[NDSolve, "ndsz"]}], 
                    CalculateScan`ODEScan`Private`failedNDSolve = 
                    Hold[NDSolve][
                    CalculateScan`ODEScan`Private`eqs$, $CellContext`y, \
{$CellContext`x, 0, 0 + Sign[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]
                     Tan[0.999 Pi 2^(-1) 
                    Abs[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]^(1/
                    8)]}]; "$Failed"]]; If[
                    Or[
                    MatchQ[CalculateScan`ODEScan`Private`sol$, 
                    Blank[NDSolve]], CalculateScan`ODEScan`Private`sol$ === 
                    "$Failed", Chop[
                    Apply[Subtract, 
                    Part[CalculateScan`ODEScan`Private`nds$, 1, 1, 2, 1, 1]]] == 
                    0], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
2420208["could not numerically solve the differential equation for the \
specified parameters", 14242], 
                    CalculateScan`ODEScan`Private`xRanges$ = 
                    Map[Part[#, 1, 2, 1, 1]& , 
                    CalculateScan`ODEScan`Private`nds$]; 
                    CalculateScan`ODEScan`Private`xRange$ = {
                    0, 0 + Sign[
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$] Min[
                    Abs[
                    Apply[
                    Subtract, CalculateScan`ODEScan`Private`xRanges$, {1}]]]}; 
                    CalculateScan`ODEScan`Private`IsPurelyRealQ$ = Not[
                    MemberQ[
                    Cases[CalculateScan`ODEScan`Private`nds$, 
                    Blank[List], {0, Infinity}], 
                    Blank[Complex], {0, Infinity}]]; 
                    If[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    If[CalculateScan`ODEScan`Private`yTS$$ === {}, 
                    CalculateScan`ODEScan`Private`yTS$$ = {1}]; 
                    If[CalculateScan`ODEScan`Private`IsPurelyRealQ$, 
                    CalculateScan`ODEScan`Private`yPlotRe$ = Plot[
                    Evaluate[
                    ReplaceAll[
                    Map[Derivative[# - 1][$CellContext`y][$CellContext`x]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    CalculateScan`ODEScan`Private`nds$]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`x, 
                    CalculateScan`ODEScan`Private`xRange$}]], PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits$], 
                    PlotStyle -> Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    If[
                    Union[CalculateScan`ODEScan`Private`yTS$$] === {
                    1}, $CellContext`y, 
                    Superscript[$CellContext`y, "(n)"]]}, PlotRange -> 
                    Automatic, ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$ = 
                    Part[
                    Lookup[
                    AbsoluteOptions[
                    CalculateScan`ODEScan`Private`yPlotRe$, PlotRange], 
                    PlotRange], 2]; If[
                    And[
                    IntervalMemberQ[
                    Interval[
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe]\
, 
                    Interval[
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$]],
                     Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$]]/
                    Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe]\
] > 1/3], Null, CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe = 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$ + \
{(-1)/3, 1/3} Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$]]]\
; Labeled[
                    If[CalculateScan`ODEScan`Private`iSQ$$, 
                    Show[
                    CalculateScan`ODEScan`Private`yPlotRe$, 
                    PlotRange -> {
                    Automatic, 
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe}\
], CalculateScan`ODEScan`Private`yPlotRe$], 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    MapIndexed[Derivative[# - 1][$CellContext`y][
                    RawBoxes[
                    FormBox["x", TraditionalForm]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], Right], 
                    CalculateScan`ODEScan`Private`yPlotReIm$ = Plot[
                    Evaluate[
                    ReplaceAll[
                    Join[
                    Map[Re[
                    Derivative[# - 1][$CellContext`y][$CellContext`x]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    Map[Im[
                    Derivative[# - 1][$CellContext`y][$CellContext`x]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], 
                    CalculateScan`ODEScan`Private`nds$]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`x, 
                    CalculateScan`ODEScan`Private`xRange$}]], PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits$], 
                    PlotRange -> Automatic, PlotStyle -> Join[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    (ReplaceAll[#, Pattern[CalculateScan`ODEScan`Private`col, 
                    Blank[RGBColor]] :> 
                    Apply[RGBColor, 1 - Apply[
                    List, CalculateScan`ODEScan`Private`col]]]& )[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]]], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    If[Union[CalculateScan`ODEScan`Private`yTS$$] === {
                    1}, $CellContext`y, 
                    Superscript[$CellContext`y, "(n)"]]}, PlotRange -> 
                    Automatic, ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$ = 
                    Part[
                    Lookup[
                    AbsoluteOptions[
                    CalculateScan`ODEScan`Private`yPlotReIm$, PlotRange], 
                    PlotRange], 2]; If[
                    And[
                    IntervalMemberQ[
                    Interval[
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$], 
                    Interval[
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$]\
], Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$]\
]/Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$]] > 1/3], Null, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$ = 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$ + \
{(-1)/3, 1/3} Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$]\
]]; Labeled[
                    If[CalculateScan`ODEScan`Private`iSQ$$, 
                    Show[
                    CalculateScan`ODEScan`Private`yPlotReIm$, 
                    PlotRange -> {
                    Automatic, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$}], CalculateScan`ODEScan`Private`yPlotReIm$], 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    Join[
                    MapIndexed[Re[
                    Derivative[# - 1][$CellContext`y][
                    RawBoxes[
                    FormBox["x", TraditionalForm]]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    MapIndexed[Im[
                    Derivative[# - 1][$CellContext`y][
                    RawBoxes[
                    FormBox["x", TraditionalForm]]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], 
                    Join[
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    
                    MapIndexed[(
                    ReplaceAll[#, Pattern[CalculateScan`ODEScan`Private`col, 
                    Blank[RGBColor]] :> 
                    Apply[RGBColor, 1 - Apply[
                    List, CalculateScan`ODEScan`Private`col]]]& )[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]]], Right]], 
                    If[CalculateScan`ODEScan`Private`yyTS$$ === {}, 
                    CalculateScan`ODEScan`Private`yyTS$$ = {1}]; 
                    CalculateScan`ODEScan`Private`yyPPlotRe$ = ParametricPlot[
                    Evaluate[
                    Map[ReplaceAll[#, CalculateScan`ODEScan`Private`nds$]& , 
                    Re[
                    Apply[{
                    Derivative[#][$CellContext`y][$CellContext`x], 
                    Derivative[#2][$CellContext`y][$CellContext`x]}& , 
                    Part[{{0, 1}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]], {1}]]]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`x, 
                    CalculateScan`ODEScan`Private`xRange$}]], AxesLabel -> {
                    Superscript[$CellContext`y, 
                    Row[{"(", 
                    Style["m", Italic], ")"}]], 
                    Superscript[$CellContext`y, 
                    Row[{"(", 
                    Style["n", Italic], ")"}]]}, PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits$], 
                    PlotStyle -> Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]], AspectRatio -> 
                    1/GoldenRatio, PlotRange -> Automatic, 
                    ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    Labeled[CalculateScan`ODEScan`Private`yyPPlotRe$, 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    MapIndexed[
                    Map[If[CalculateScan`ODEScan`Private`IsPurelyRealQ$, 
                    Identity[
                    Blank[Slot]], 
                    Re[
                    Blank[Slot]]]& , {
                    Derivative[
                    Part[#, 1]][$CellContext`y], 
                    Derivative[
                    Part[#, 2]][$CellContext`y]}]& , 
                    Part[{{0, 1}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]]], 
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Part[{{0, 1}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]]]], Right]]]],
                   "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> 
                    None}, {{$CellContext`Y1$$, 0.7853981633974483, 
                    $CellContext`y[0]}, -1.5550883635269477`, 
                    1.5550883635269477`, ControlPlacement -> 1}, {{
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    True, "show"}, {
                    True -> "solution or derivatives", False -> 
                    "generalized phase plots"}, ControlPlacement -> 2}, {{
                    CalculateScan`ODEScan`Private`yTS$$, {1}, ""}, 
                    Dynamic[
                    Map[# -> Dynamic[
                    Style[
                    Derivative[# - 1][$CellContext`y], 
                    If[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    Black, Gray]]]& , 
                    Range[1, 1 + 1]]], ControlType -> CheckboxBar, 
                    ContinuousAction -> False, ControlPlacement -> 3}, {{
                    CalculateScan`ODEScan`Private`yyTS$$, {1}, ""}, 
                    Dynamic[
                    MapIndexed[Part[#2, 1] -> Dynamic[
                    Style[
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
2420208[
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
2420208["`1` vs. `2`", 14246], {
                    Derivative[
                    Part[#, 1]][$CellContext`y], 
                    Derivative[
                    Part[#, 2]][$CellContext`y]}], 
                    If[
                    Not[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$],
                     Black, Gray]]]& , {{0, 1}}]], ControlType -> CheckboxBar,
                     ContinuousAction -> False, ControlPlacement -> 4}, {{
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$, 
                    0.2575795557527179, 
                    Subscript["x", "max"]}, -1, 1, ControlPlacement -> 5}, {{
                    CalculateScan`ODEScan`Private`iSQ$$, True, ""}, {
                    True, False}, ControlPlacement -> 6}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Column[{
                    Style["Initial conditions:"], 
                    Manipulate`Place[1]}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Column[{
                    Manipulate`Place[2], 
                    Dynamic[
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ === 
                    True, 
                    Manipulate`Place[3], 
                    Manipulate`Place[4]]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
2420208["`1`\[Hyphen]range", {
                    Style["x", Italic]}], 
                    Manipulate`Place[5], 
                    Row[{
                    Manipulate`Place[6], " vertical image stabilization"}]}, 
                    Dividers -> {None, {
                    False, False, True, False, True, False, False}}], 
                    ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " ", "More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVt9v0zAQbim/f8N/\
gMQzGmUPvCABHYxJA0pS3uvFl8bCtYPtbIN/Hnx2kzRrVymmAzSlD6f60ny+++676z05klHa7/V6+\
qo1HySn6Q08PbZmJOe5LAR9d5or0JpJkV7BZ7eticHsASc/\
gHrfdWveSzUnxp9f4fuEJwUnBr4axplhoKf7iuQZS3TtGSt2bH8y5TIhnP2Ep8Pd4c5w56WHwVjGxB\
hQQr9oC5lnimhIewh0zZq3nIhv/vioPH4qOI/hewEiAf3AeieKUAsjBeGYT/Ctl5upu5iYIYISRS+\
cJifPUdsLtFFMzCYwz/GN88l63haYqJn23NwrudmkIB/+TXwgYxeT97ik3dkRGBbGJaPvrKz+\
OXcDPL9uC6/kyXriML83HHkjhh2DXqXzWes6eUaqrnXRL7i6qPmy1SDPnzL1/9Ih02Y1jGHbMGB+\
ZGu8Xnur8Ltt4WWOXb8Q931rPntHCbhuOFSC+yhpwRdRNFMeeIm2T1fn1uEx7lR8x+\
gMqWCFE9k4y35x/\
fGwAq83hRhrN92CdEQ9AyLIwbqo43aPzZgZZUSRxAIvruuXTTaRdSgBd7avPROU2QHmCdm0PKE5SJf\
qTkySffmj4lZyOdNkyPuBMDADtVH0t7A+ypIr6EQGRhLjBU29BnNYJTUmKlj2gxIkzolgCMl+2Y/\
75h8uVwKp2leoLuVZHLjSnIYn0S8LfAhiZrLmjh04uoLbFrOJ5Emtuoil6fK02R7T/\
SbTjRuaAz2UhNCShA/0blPoNoW/uims7MHdmtCtCd2a0K0J3Zrw/64JLmL8V/oNm4e4Lg=="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
   Typeset`pod37$$, Typeset`pod38$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`aux38$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "8", "datatypes" -> "", "timedout" -> "Recurrence", 
     "timedoutpods" -> "", "timing" -> "2.291", "parsetiming" -> "0.249", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa245314765id51c5g51b300004ddab649big5i04i8350669649384844499", "id" -> 
     "MSP245414765id51c5g51b300005ag733515cdcfe1b", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "16", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa245514765id51c5g51b300001ag6a6a7i0h641dd8350669649384844499", "version" -> 
     "2.6", "inputstring" -> "y' = (xy)/(2x-1)"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "1", "datatypes" -> "", "timedout" -> "Recurrence", 
     "timedoutpods" -> "", "timing" -> "2.351", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "parseidserver" -> "7", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "7", "related" -> "", 
     "version" -> "2.6", "inputstring" -> "y' = (xy)/(2x-1)"}}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 4, 28, 7, 28, 16.1668696`8.961200880882926}, "Line" -> 2,
     "SessionID" -> 29904166127299147123}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8}, Typeset`failedpods$$ = {9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
    19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
   37, 38}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "y' = (xy)/(2x-1)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$, Typeset`pod38$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$, Typeset`aux38$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{704., {637.3544921875, 642.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$, Typeset`pod38$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$, Typeset`aux38$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa245314765id51c5g51b300004ddab649big5i04i8350669649384844499", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.860137696281561*^9},ExpressionUUID->"7d819186-067d-4840-94e2-\
b82a79097219"]
}, Open  ]]
},
WindowSize->{768., 507.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"41fa294c-47c8-4d83-af05-6ec5f465e194"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 192, 2, 41, "WolframAlphaLong",ExpressionUUID->"3fc3cc1d-54e9-477a-8ed0-c474f1b0440d"],
Cell[775, 26, 212674, 3954, 1290, "Print",ExpressionUUID->"7d819186-067d-4840-94e2-b82a79097219"]
}, Open  ]]
}
]
*)

